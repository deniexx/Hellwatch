<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_ability" xml:lang="en-US">
<title>Ability Class Reference</title>
<indexterm><primary>Ability</primary></indexterm>
<para>

<para>A base ability class, designed to be inherited and provided with functionality  </para>
 
</para>
<para>
<computeroutput>#include &lt;Ability.h&gt;</computeroutput>
</para>
Inheritance diagram for Ability:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_ability__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Ability:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_ability__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_ability_1a1e03282d1a96232143322ef89fcbb314">Ability</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a291796c5cb356bcef9c6f6c0b2386ca2">Init</link> (<link linkend="_class_abilities_component">AbilitiesComponent</link> *inOwningComponent)</para>

<para>Initializes the ability with the ability component  </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_ability_1aaa83dbb12f79ceecc4d7b1cb3930d3d3">Update</link> (float deltaTime)</para>
</listitem>
            <listitem><para><link linkend="_struct_activation_outcome">ActivationOutcome</link> <link linkend="_class_ability_1a7815198848a6acf69bf1d76caf595820">TryActivate</link> ()</para>

<para>Attempts to activate this ability, returns an <link linkend="_struct_activation_outcome">ActivationOutcome</link> struct  </para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a52f7aee4243f1da13b544a038892e43b">CommitAbility</link> ()</para>

<para>Attempts to commit the ability if it is targeted, does nothing if the ability is NOT targeted  </para>
</listitem>
            <listitem><para>bool <link linkend="_class_ability_1ad7290141bc73d865773ac54477db7fb6">EndAbility</link> ()</para>

<para>Attempts to end the ability, returns a bool whether it was successful  </para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a13aa60092026728b42ade2811168c087">SetActivationKey</link> (<link linkend="_namespace_ability_activation_key_1ab159d3c3f26196a9ff493b67ecf7e68c">AbilityActivationKey::Type</link> key)</para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a83e04cf64b10504ee3bc1cd10ad7219c">SetAbilityCostAmount</link> (float newCost)</para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a36391efa24d0da869f43e4ba592241c8">SetAbilityCostType</link> (<link linkend="_namespace_hellwatch_attribute_1ad0a500e65129d06e4589f9bca54c4a7d">HellwatchAttribute::Type</link> newCost)</para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a6737d4900eb79147ca81aaa20a85218a">SetAbilityName</link> (std::string newName)</para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a072cbfb1685db6fd4a0723d519bc9176">SetIsActive</link> (bool bNewState)</para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a060e6f07d0c7510f7779418d69489fea">SetCooldownStartPolicy</link> (<link linkend="_namespace_cooldown_start_policy_1a99c3a8f4a331db7e6db8dfda1785b101">CooldownStartPolicy::Type</link> newPolicy)</para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1aa7f8c3e16910914b751aa1e1e5731f8f">SetAbilityCooldown</link> (float newCooldown)</para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a51b48c192967cf32ea352f5e735136d6">SetDamageAmount</link> (float newAmount)</para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a95990ec850dd39919d25c4c481935db5">SetIsTargeted</link> (bool bNewState)</para>
</listitem>
            <listitem><para>void <link linkend="_class_ability_1a5da322fcc571670d8b96385b67685a68">SetIsTargeting</link> (bool bNewState)</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_ability_1ac2b656dc59480f2973aaa3f0f59706bc">IsActive</link> ()</para>

<para>Checks if the ability is active  </para>
</listitem>
            <listitem><para>__forceinline <link linkend="_namespace_ability_activation_key_1ab159d3c3f26196a9ff493b67ecf7e68c">AbilityActivationKey::Type</link> <link linkend="_class_ability_1a7af0334ceb8c57dd4b114124409492b5">GetActivationKey</link> () const</para>
</listitem>
            <listitem><para>__forceinline const std::string &amp; <link linkend="_class_ability_1a4e28b2c8ffd652b050612ee758f76958">GetAbilityName</link> () const</para>
</listitem>
            <listitem><para>__forceinline bool <link linkend="_class_ability_1adbd4d2c476e68c473b2872fd788eb2c2">IsInCooldown</link> () const</para>
</listitem>
            <listitem><para>__forceinline bool <link linkend="_class_ability_1a2a7a75401b5757d3b22ed26544bfdb19">IsAbilityTargeted</link> () const</para>
</listitem>
            <listitem><para>__forceinline bool <link linkend="_class_ability_1a2432f7d4c4159f75e8552d08b7ca51ed">IsAbilityTargeting</link> () const</para>
</listitem>
            <listitem><para>__forceinline float <link linkend="_class_ability_1a063307977163faa4a3bcf7089cf70bb5">GetRemainingCooldown</link> () const</para>
</listitem>
            <listitem><para>float <link linkend="_class_ability_1a57f2e9a30ca6d2588fd721af77353d52">GetDamageAmount</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_abilities_component">AbilitiesComponent</link> * <link linkend="_class_ability_1a50b5f7d8d3197869b3bc32d3c9bd4fd2">GetOwner</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_attribute_component">AttributeComponent</link> * <link linkend="_class_ability_1ab567fcf9b39984aa3bf45343ffcbc086">GetOwnerAttributes</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual void <link linkend="_class_ability_1a25388ebb622b414ef027eb33bf4a5cfb">PostInit</link> ()</para>

<para>Called after ability has been initialized, do set up here  </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_ability_1ace910398ed2eb9f58c8e85dbb7a72de2">Begin</link> ()</para>

<para>Begins the ability, called if TryActivate was successful  </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_ability_1a61a88edf359a3c6bd34868e58bf64f20">End</link> ()</para>

<para>Called on end of ability  </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_ability_1a1b338496a61edb978f7f83570b9f03a4">Commit</link> ()</para>

<para>Called after committing an ability, targeting has been confirmed  </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_ability_1a172dfdc4273690de2476fda0b82e5ea6">BeginTargeting</link> ()</para>

<para>Begins targeting, spawn an actor that follows the mouse to be able to identify the range of the ability  </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_ability_1af82a917f3d8fc9260651c4cc59affb0e">EndTargeting</link> ()</para>

<para>Ends targeting, remove the targeting actor  </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_ability_1a4276e15e3a35b7887dd679eb5e332ff4">CanActivate</link> (<link linkend="_struct_activation_outcome">ActivationOutcome</link> &amp;OutActivationOutcome)</para>

<para>Can the ability be activated  </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespace_ability_activation_key_1ab159d3c3f26196a9ff493b67ecf7e68c">AbilityActivationKey::Type</link> <link linkend="_class_ability_1a4310ef2c96c00e405697f9983da58645">activationKey</link></para>
</listitem>
            <listitem><para>float <link linkend="_class_ability_1a0e5b9e690d512aa57f66a4f7ba3cb295">cooldownTimer</link></para>
</listitem>
            <listitem><para>float <link linkend="_class_ability_1a6e6e8dc7387275d8c4cef1036d0b2a08">cooldown</link></para>
</listitem>
            <listitem><para>float <link linkend="_class_ability_1aa080c6e4857a11599f25e1feb65aae9d">damageAmount</link></para>
</listitem>
            <listitem><para>float <link linkend="_class_ability_1a3d60b8e01776b0f6f42aaa3fa8821aa7">abilityCostAmount</link></para>
</listitem>
            <listitem><para><link linkend="_namespace_hellwatch_attribute_1ad0a500e65129d06e4589f9bca54c4a7d">HellwatchAttribute::Type</link> <link linkend="_class_ability_1aa0aa42d055ea84389c3bd7bb7b61fd00">abilityCostType</link></para>
</listitem>
            <listitem><para><link linkend="_namespace_cooldown_start_policy_1a99c3a8f4a331db7e6db8dfda1785b101">CooldownStartPolicy::Type</link> <link linkend="_class_ability_1a74f19e3368e28b7b61bf54cabe2da629">cooldownStartPolicy</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_ability_1afc72628992607694ae9e4a096557fead">bIsTargeted</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_ability_1ae2aac411168782dab7715c29817f23de">bIsTargeting</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_class_ability_1acc6fba5d131273ccbc0cf147b6f38eb2">abilityName</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_ability_1ae426458572df63716f8f8b63e83d04ca">bIsActive</link></para>
</listitem>
            <listitem><para><link linkend="_class_abilities_component">AbilitiesComponent</link> * <link linkend="_class_ability_1aa75c59af7fa1fd68787a211e66fd0173">owningComponent</link> = nullptr</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A base ability class, designed to be inherited and provided with functionality  </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_ability_1a1e03282d1a96232143322ef89fcbb314"/><section>
    <title>Ability()</title>
<indexterm><primary>Ability</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>Ability</secondary></indexterm>
<para><computeroutput>Ability::Ability ( )</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_ability_1ace910398ed2eb9f58c8e85dbb7a72de2"/><section>
    <title>Begin()</title>
<indexterm><primary>Begin</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>Begin</secondary></indexterm>
<para><computeroutput>void Ability::Begin ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Begins the ability, called if TryActivate was successful  </para>
</para>
<para>
Reimplemented in <link linkend="_class_dash_1ab37a52fcb0a2953ad7f5bcf698d9d65f">Dash</link>, <link linkend="_class_ice_bolt_1a5dc506246bfe473255626de565ca8af4">IceBolt</link>, <link linkend="_class_meteor_1a0c35a52087ee487518c3d4e9f0e36cb2">Meteor</link>, and <link linkend="_class_piercing_strike_1afc8244751f335b1ae83a42b252409ae9">PiercingStrike</link>.</para>
</section>
<anchor xml:id="_class_ability_1a172dfdc4273690de2476fda0b82e5ea6"/><section>
    <title>BeginTargeting()</title>
<indexterm><primary>BeginTargeting</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>BeginTargeting</secondary></indexterm>
<para><computeroutput>void Ability::BeginTargeting ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Begins targeting, spawn an actor that follows the mouse to be able to identify the range of the ability  </para>
</para>
</section>
<anchor xml:id="_class_ability_1a4276e15e3a35b7887dd679eb5e332ff4"/><section>
    <title>CanActivate()</title>
<indexterm><primary>CanActivate</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>CanActivate</secondary></indexterm>
<para><computeroutput>bool Ability::CanActivate (<link linkend="_struct_activation_outcome">ActivationOutcome</link> &amp; OutActivationOutcome)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Can the ability be activated  </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>OutActivationOutcome</entry><entry>
<para>This is an out parameter, holding information whether we can activate this ability, and if we can&apos;t why</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A boolean, whether we can activate this ability or not</para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_ability_1a1b338496a61edb978f7f83570b9f03a4"/><section>
    <title>Commit()</title>
<indexterm><primary>Commit</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>Commit</secondary></indexterm>
<para><computeroutput>void Ability::Commit ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called after committing an ability, targeting has been confirmed  </para>
</para>
</section>
<anchor xml:id="_class_ability_1a52f7aee4243f1da13b544a038892e43b"/><section>
    <title>CommitAbility()</title>
<indexterm><primary>CommitAbility</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>CommitAbility</secondary></indexterm>
<para><computeroutput>void Ability::CommitAbility ( )</computeroutput></para><para>

<para>Attempts to commit the ability if it is targeted, does nothing if the ability is NOT targeted  </para>
</para>
</section>
<anchor xml:id="_class_ability_1a61a88edf359a3c6bd34868e58bf64f20"/><section>
    <title>End()</title>
<indexterm><primary>End</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>End</secondary></indexterm>
<para><computeroutput>void Ability::End ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called on end of ability  </para>
</para>
<para>
Reimplemented in <link linkend="_class_dash_1a15631a12a91058a2f41e4a8f80127378">Dash</link>, <link linkend="_class_ice_bolt_1a2b7a3bb2d1627b36331a5c2fee6334a7">IceBolt</link>, <link linkend="_class_meteor_1ad31eefb5e13589692a68f77ed022371c">Meteor</link>, and <link linkend="_class_piercing_strike_1a31b5a023d19f73ec307cbc6e452e85ea">PiercingStrike</link>.</para>
</section>
<anchor xml:id="_class_ability_1ad7290141bc73d865773ac54477db7fb6"/><section>
    <title>EndAbility()</title>
<indexterm><primary>EndAbility</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>EndAbility</secondary></indexterm>
<para><computeroutput>bool Ability::EndAbility ( )</computeroutput></para><para>

<para>Attempts to end the ability, returns a bool whether it was successful  </para>
</para>
</section>
<anchor xml:id="_class_ability_1af82a917f3d8fc9260651c4cc59affb0e"/><section>
    <title>EndTargeting()</title>
<indexterm><primary>EndTargeting</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>EndTargeting</secondary></indexterm>
<para><computeroutput>void Ability::EndTargeting ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Ends targeting, remove the targeting actor  </para>
</para>
</section>
<anchor xml:id="_class_ability_1a4e28b2c8ffd652b050612ee758f76958"/><section>
    <title>GetAbilityName()</title>
<indexterm><primary>GetAbilityName</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>GetAbilityName</secondary></indexterm>
<para><computeroutput>__forceinline const std::string &amp; Ability::GetAbilityName ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a7af0334ceb8c57dd4b114124409492b5"/><section>
    <title>GetActivationKey()</title>
<indexterm><primary>GetActivationKey</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>GetActivationKey</secondary></indexterm>
<para><computeroutput>__forceinline <link linkend="_namespace_ability_activation_key_1ab159d3c3f26196a9ff493b67ecf7e68c">AbilityActivationKey::Type</link> Ability::GetActivationKey ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a57f2e9a30ca6d2588fd721af77353d52"/><section>
    <title>GetDamageAmount()</title>
<indexterm><primary>GetDamageAmount</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>GetDamageAmount</secondary></indexterm>
<para><computeroutput>float Ability::GetDamageAmount ( )</computeroutput></para></section>
<anchor xml:id="_class_ability_1a50b5f7d8d3197869b3bc32d3c9bd4fd2"/><section>
    <title>GetOwner()</title>
<indexterm><primary>GetOwner</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>GetOwner</secondary></indexterm>
<para><computeroutput><link linkend="_class_abilities_component">AbilitiesComponent</link> * Ability::GetOwner ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1ab567fcf9b39984aa3bf45343ffcbc086"/><section>
    <title>GetOwnerAttributes()</title>
<indexterm><primary>GetOwnerAttributes</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>GetOwnerAttributes</secondary></indexterm>
<para><computeroutput><link linkend="_class_attribute_component">AttributeComponent</link> * Ability::GetOwnerAttributes ( )</computeroutput></para></section>
<anchor xml:id="_class_ability_1a063307977163faa4a3bcf7089cf70bb5"/><section>
    <title>GetRemainingCooldown()</title>
<indexterm><primary>GetRemainingCooldown</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>GetRemainingCooldown</secondary></indexterm>
<para><computeroutput>__forceinline float Ability::GetRemainingCooldown ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a291796c5cb356bcef9c6f6c0b2386ca2"/><section>
    <title>Init()</title>
<indexterm><primary>Init</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>Init</secondary></indexterm>
<para><computeroutput>void Ability::Init (<link linkend="_class_abilities_component">AbilitiesComponent</link> * inOwningComponent)</computeroutput></para><para>

<para>Initializes the ability with the ability component  </para>
</para>
</section>
<anchor xml:id="_class_ability_1a2a7a75401b5757d3b22ed26544bfdb19"/><section>
    <title>IsAbilityTargeted()</title>
<indexterm><primary>IsAbilityTargeted</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>IsAbilityTargeted</secondary></indexterm>
<para><computeroutput>__forceinline bool Ability::IsAbilityTargeted ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a2432f7d4c4159f75e8552d08b7ca51ed"/><section>
    <title>IsAbilityTargeting()</title>
<indexterm><primary>IsAbilityTargeting</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>IsAbilityTargeting</secondary></indexterm>
<para><computeroutput>__forceinline bool Ability::IsAbilityTargeting ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1ac2b656dc59480f2973aaa3f0f59706bc"/><section>
    <title>IsActive()</title>
<indexterm><primary>IsActive</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>IsActive</secondary></indexterm>
<para><computeroutput>virtual bool Ability::IsActive ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Checks if the ability is active  </para>
</para>
</section>
<anchor xml:id="_class_ability_1adbd4d2c476e68c473b2872fd788eb2c2"/><section>
    <title>IsInCooldown()</title>
<indexterm><primary>IsInCooldown</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>IsInCooldown</secondary></indexterm>
<para><computeroutput>__forceinline bool Ability::IsInCooldown ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a25388ebb622b414ef027eb33bf4a5cfb"/><section>
    <title>PostInit()</title>
<indexterm><primary>PostInit</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>PostInit</secondary></indexterm>
<para><computeroutput>void Ability::PostInit ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called after ability has been initialized, do set up here  </para>
</para>
<para>
Reimplemented in <link linkend="_class_dash_1a3078ae06d66361da3e35af7b0efac786">Dash</link>, <link linkend="_class_ice_bolt_1aaf128a2d87802fa2e09fb8e7c150646b">IceBolt</link>, <link linkend="_class_meteor_1ab7f46bd407dcbb53214310a8f95c9307">Meteor</link>, and <link linkend="_class_piercing_strike_1a3309a9ad1070cbd3e47e51ba50e92c20">PiercingStrike</link>.</para>
</section>
<anchor xml:id="_class_ability_1aa7f8c3e16910914b751aa1e1e5731f8f"/><section>
    <title>SetAbilityCooldown()</title>
<indexterm><primary>SetAbilityCooldown</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>SetAbilityCooldown</secondary></indexterm>
<para><computeroutput>void Ability::SetAbilityCooldown (float newCooldown)</computeroutput></para></section>
<anchor xml:id="_class_ability_1a83e04cf64b10504ee3bc1cd10ad7219c"/><section>
    <title>SetAbilityCostAmount()</title>
<indexterm><primary>SetAbilityCostAmount</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>SetAbilityCostAmount</secondary></indexterm>
<para><computeroutput>void Ability::SetAbilityCostAmount (float newCost)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a36391efa24d0da869f43e4ba592241c8"/><section>
    <title>SetAbilityCostType()</title>
<indexterm><primary>SetAbilityCostType</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>SetAbilityCostType</secondary></indexterm>
<para><computeroutput>void Ability::SetAbilityCostType (<link linkend="_namespace_hellwatch_attribute_1ad0a500e65129d06e4589f9bca54c4a7d">HellwatchAttribute::Type</link> newCost)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a6737d4900eb79147ca81aaa20a85218a"/><section>
    <title>SetAbilityName()</title>
<indexterm><primary>SetAbilityName</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>SetAbilityName</secondary></indexterm>
<para><computeroutput>void Ability::SetAbilityName (std::string newName)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a13aa60092026728b42ade2811168c087"/><section>
    <title>SetActivationKey()</title>
<indexterm><primary>SetActivationKey</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>SetActivationKey</secondary></indexterm>
<para><computeroutput>void Ability::SetActivationKey (<link linkend="_namespace_ability_activation_key_1ab159d3c3f26196a9ff493b67ecf7e68c">AbilityActivationKey::Type</link> key)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a060e6f07d0c7510f7779418d69489fea"/><section>
    <title>SetCooldownStartPolicy()</title>
<indexterm><primary>SetCooldownStartPolicy</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>SetCooldownStartPolicy</secondary></indexterm>
<para><computeroutput>void Ability::SetCooldownStartPolicy (<link linkend="_namespace_cooldown_start_policy_1a99c3a8f4a331db7e6db8dfda1785b101">CooldownStartPolicy::Type</link> newPolicy)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a51b48c192967cf32ea352f5e735136d6"/><section>
    <title>SetDamageAmount()</title>
<indexterm><primary>SetDamageAmount</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>SetDamageAmount</secondary></indexterm>
<para><computeroutput>void Ability::SetDamageAmount (float newAmount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a072cbfb1685db6fd4a0723d519bc9176"/><section>
    <title>SetIsActive()</title>
<indexterm><primary>SetIsActive</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>SetIsActive</secondary></indexterm>
<para><computeroutput>void Ability::SetIsActive (bool bNewState)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a95990ec850dd39919d25c4c481935db5"/><section>
    <title>SetIsTargeted()</title>
<indexterm><primary>SetIsTargeted</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>SetIsTargeted</secondary></indexterm>
<para><computeroutput>void Ability::SetIsTargeted (bool bNewState)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a5da322fcc571670d8b96385b67685a68"/><section>
    <title>SetIsTargeting()</title>
<indexterm><primary>SetIsTargeting</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>SetIsTargeting</secondary></indexterm>
<para><computeroutput>void Ability::SetIsTargeting (bool bNewState)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a7815198848a6acf69bf1d76caf595820"/><section>
    <title>TryActivate()</title>
<indexterm><primary>TryActivate</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>TryActivate</secondary></indexterm>
<para><computeroutput><link linkend="_struct_activation_outcome">ActivationOutcome</link> Ability::TryActivate ( )</computeroutput></para><para>

<para>Attempts to activate this ability, returns an <link linkend="_struct_activation_outcome">ActivationOutcome</link> struct  </para>
</para>
</section>
<anchor xml:id="_class_ability_1aaa83dbb12f79ceecc4d7b1cb3930d3d3"/><section>
    <title>Update()</title>
<indexterm><primary>Update</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>Update</secondary></indexterm>
<para><computeroutput>void Ability::Update (float deltaTime)<computeroutput>[virtual]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_ability_1a3d60b8e01776b0f6f42aaa3fa8821aa7"/><section>
    <title>abilityCostAmount</title>
<indexterm><primary>abilityCostAmount</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>abilityCostAmount</secondary></indexterm>
<para><computeroutput>float Ability::abilityCostAmount<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1aa0aa42d055ea84389c3bd7bb7b61fd00"/><section>
    <title>abilityCostType</title>
<indexterm><primary>abilityCostType</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>abilityCostType</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_hellwatch_attribute_1ad0a500e65129d06e4589f9bca54c4a7d">HellwatchAttribute::Type</link> Ability::abilityCostType<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1acc6fba5d131273ccbc0cf147b6f38eb2"/><section>
    <title>abilityName</title>
<indexterm><primary>abilityName</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>abilityName</secondary></indexterm>
<para><computeroutput>std::string Ability::abilityName<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a4310ef2c96c00e405697f9983da58645"/><section>
    <title>activationKey</title>
<indexterm><primary>activationKey</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>activationKey</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_ability_activation_key_1ab159d3c3f26196a9ff493b67ecf7e68c">AbilityActivationKey::Type</link> Ability::activationKey<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1ae426458572df63716f8f8b63e83d04ca"/><section>
    <title>bIsActive</title>
<indexterm><primary>bIsActive</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>bIsActive</secondary></indexterm>
<para><computeroutput>bool Ability::bIsActive<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1afc72628992607694ae9e4a096557fead"/><section>
    <title>bIsTargeted</title>
<indexterm><primary>bIsTargeted</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>bIsTargeted</secondary></indexterm>
<para><computeroutput>bool Ability::bIsTargeted<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1ae2aac411168782dab7715c29817f23de"/><section>
    <title>bIsTargeting</title>
<indexterm><primary>bIsTargeting</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>bIsTargeting</secondary></indexterm>
<para><computeroutput>bool Ability::bIsTargeting<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a6e6e8dc7387275d8c4cef1036d0b2a08"/><section>
    <title>cooldown</title>
<indexterm><primary>cooldown</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>cooldown</secondary></indexterm>
<para><computeroutput>float Ability::cooldown<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a74f19e3368e28b7b61bf54cabe2da629"/><section>
    <title>cooldownStartPolicy</title>
<indexterm><primary>cooldownStartPolicy</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>cooldownStartPolicy</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_cooldown_start_policy_1a99c3a8f4a331db7e6db8dfda1785b101">CooldownStartPolicy::Type</link> Ability::cooldownStartPolicy<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1a0e5b9e690d512aa57f66a4f7ba3cb295"/><section>
    <title>cooldownTimer</title>
<indexterm><primary>cooldownTimer</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>cooldownTimer</secondary></indexterm>
<para><computeroutput>float Ability::cooldownTimer<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1aa080c6e4857a11599f25e1feb65aae9d"/><section>
    <title>damageAmount</title>
<indexterm><primary>damageAmount</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>damageAmount</secondary></indexterm>
<para><computeroutput>float Ability::damageAmount<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_ability_1aa75c59af7fa1fd68787a211e66fd0173"/><section>
    <title>owningComponent</title>
<indexterm><primary>owningComponent</primary><secondary>Ability</secondary></indexterm>
<indexterm><primary>Ability</primary><secondary>owningComponent</secondary></indexterm>
<para><computeroutput><link linkend="_class_abilities_component">AbilitiesComponent</link>* Ability::owningComponent = nullptr<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
D:/Uni/CMP208/Hellwatch/build/vs2017/Abilities/<link linkend="__ability_8h">Ability.h</link>D:/Uni/CMP208/Hellwatch/build/vs2017/Abilities/<link linkend="__ability_8cpp">Ability.cpp</link></section>
</section>
