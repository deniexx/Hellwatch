<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_mesh_actor_8cpp" kind="file" language="C++">
    <compoundname>MeshActor.cpp</compoundname>
    <includes refid="_mesh_actor_8h" local="yes">MeshActor.h</includes>
    <includes refid="scene__app_8h" local="yes">scene_app.h</includes>
    <includes local="yes">graphics/renderer_3d.h</includes>
    <includes refid="_actor_component_8h" local="yes">ActorComponents/ActorComponent.h</includes>
    <incdepgraph>
      <node id="31">
        <label>ActorComponents/ActorComponent.h</label>
        <link refid="_actor_component_8h"/>
      </node>
      <node id="1">
        <label>D:/Uni/CMP208/Hellwatch/build/vs2017/Actors/MeshActor.cpp</label>
        <link refid="_mesh_actor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>MeshActor.h</label>
        <link refid="_mesh_actor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Utils.h</label>
        <link refid="_utils_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>GameFramework/WorldObject.h</label>
        <link refid="_world_object_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Interfaces/Damagable.h</label>
        <link refid="_damagable_8h"/>
      </node>
      <node id="20">
        <label>obj_mesh_loader.h</label>
        <link refid="obj__mesh__loader_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>primitive_builder.h</label>
        <link refid="primitive__builder_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>scene_app.h</label>
        <link refid="scene__app_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>box2d/box2d.h</label>
      </node>
      <node id="16">
        <label>cstddef</label>
      </node>
      <node id="26">
        <label>future</label>
      </node>
      <node id="21">
        <label>gef.h</label>
      </node>
      <node id="25">
        <label>graphics/font.h</label>
      </node>
      <node id="15">
        <label>graphics/material.h</label>
      </node>
      <node id="29">
        <label>graphics/mesh.h</label>
      </node>
      <node id="10">
        <label>graphics/renderer_3d.h</label>
      </node>
      <node id="17">
        <label>graphics/scene.h</label>
      </node>
      <node id="22">
        <label>map</label>
      </node>
      <node id="4">
        <label>maths/Matrix44.h</label>
      </node>
      <node id="7">
        <label>maths/Vector2.h</label>
      </node>
      <node id="28">
        <label>maths/math_utils.h</label>
      </node>
      <node id="9">
        <label>maths/matrix44.h</label>
      </node>
      <node id="5">
        <label>maths/quaternion.h</label>
      </node>
      <node id="13">
        <label>maths/vector2.h</label>
      </node>
      <node id="8">
        <label>maths/vector4.h</label>
      </node>
      <node id="27">
        <label>random</label>
      </node>
      <node id="23">
        <label>string</label>
      </node>
      <node id="12">
        <label>system/application.h</label>
      </node>
      <node id="19">
        <label>system/platform.h</label>
      </node>
      <node id="24">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mesh_actor_8h" kindref="compound">MeshActor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scene__app_8h" kindref="compound">scene_app.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;graphics/renderer_3d.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_actor_component_8h" kindref="compound">ActorComponents/ActorComponent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="class_mesh_actor_1af40424bf59441cfb3362f8ef3e1fbb68" kindref="member">MeshActor::MeshActor</ref>()</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Super()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>meshName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>material.set_colour(0xFFFFFFFF);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>bOverrideMaterial<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>material.set_texture(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>material.set_colour(0xFFFFFFFF);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="class_mesh_actor_1af40424bf59441cfb3362f8ef3e1fbb68" kindref="member">MeshActor::MeshActor</ref>(gef::Mesh*<sp/>inMesh)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Super()</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>inMesh;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mesh_actor_1a9c8f4860ae03966a27c3ee22c2a2b5a1" kindref="member">MeshActor::Render</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SceneApp::instance<sp/>&amp;&amp;<sp/><ref refid="class_mesh_actor_1a906146d34e290e3bd7132a4dcbfad8a1" kindref="member">GetMesh</ref>())</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SceneApp::instance-&gt;GetRenderer3D())</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_world_object_1a4c83c0d8e3817aac3ef2080ec0972802" kindref="member">BuildTransform</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SceneApp::instance-&gt;GetRenderer3D()-&gt;set_override_material(&amp;<ref refid="class_mesh_actor_1a8585ace5ca84b7903f216c77661a5787" kindref="member">material</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SceneApp::instance-&gt;GetRenderer3D()-&gt;DrawMesh(*<ref refid="class_mesh_actor_1a906146d34e290e3bd7132a4dcbfad8a1" kindref="member">GetMesh</ref>(),<sp/><ref refid="class_world_object_1a1302aea00b9a5f348459f55e9dd50725" kindref="member">GetTransform</ref>());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mesh_actor_1a3743470557ddbbc88bc73e4dd283d6bf" kindref="member">MeshActor::Update</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaTime)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>b2Body*<sp/>body<sp/>=<sp/><ref refid="class_world_object_1aa3b5f5e5e1ed26c94265854e2858bdee" kindref="member">GetCollisionBody</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(body<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2Vec2<sp/><ref refid="class_world_object_1a78bd9162f55826c5c68706d688578cf8" kindref="member">translation</ref><sp/>=<sp/>body-&gt;GetPosition();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_world_object_1a830b64bbf6df3fc50284b0316c124133" kindref="member">SetTranslation</ref>(gef::Vector4(<ref refid="class_world_object_1a78bd9162f55826c5c68706d688578cf8" kindref="member">translation</ref>.x,<sp/>0,<sp/><ref refid="class_world_object_1a78bd9162f55826c5c68706d688578cf8" kindref="member">translation</ref>.y));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>component<sp/>:<sp/>components)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component-&gt;UpdateComponent(deltaTime);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mesh_actor_1a86f27025c3484267804fdaa5e6082fd4" kindref="member">MeshActor::SetMeshName</ref>(std::string<sp/>newName)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_mesh_actor_1a8eb71848a77c1c7ffb0f88d526a633e3" kindref="member">meshName</ref><sp/>=<sp/>newName;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Mesh*<sp/>newMesh<sp/>=<sp/>SceneApp::instance-&gt;RequestMeshByName(<ref refid="class_mesh_actor_1a8eb71848a77c1c7ffb0f88d526a633e3" kindref="member">meshName</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newMesh)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mesh_actor_1a25950ae28c6abf2e9e3dc64cfa19c0c7" kindref="member">SetMesh</ref>(newMesh);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mesh_actor_1a295a747ea81d8b09e084c488ab183fbb" kindref="member">MeshActor::SetRotation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gef::Vector4&amp;<sp/>inRotation)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Vector4<sp/>tempRotation<sp/>=<sp/>gef::Vector4(inRotation.x(),<sp/>inRotation.y(),<sp/>inRotation.z());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>Super::SetRotation(tempRotation);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Uni/CMP208/Hellwatch/build/vs2017/Actors/MeshActor.cpp"/>
  </compounddef>
</doxygen>
