<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="primitive__builder_8cpp" kind="file" language="C++">
    <compoundname>primitive_builder.cpp</compoundname>
    <includes refid="primitive__builder_8h" local="yes">primitive_builder.h</includes>
    <includes local="no">graphics/mesh.h</includes>
    <includes local="no">system/platform.h</includes>
    <includes local="no">graphics/primitive.h</includes>
    <includes local="no">maths/math_utils.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>D:/Uni/CMP208/Hellwatch/primitive_builder.cpp</label>
        <link refid="primitive__builder_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>primitive_builder.h</label>
        <link refid="primitive__builder_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstddef</label>
      </node>
      <node id="4">
        <label>graphics/material.h</label>
      </node>
      <node id="6">
        <label>graphics/mesh.h</label>
      </node>
      <node id="8">
        <label>graphics/primitive.h</label>
      </node>
      <node id="11">
        <label>math.h</label>
      </node>
      <node id="9">
        <label>maths/math_utils.h</label>
      </node>
      <node id="3">
        <label>maths/vector4.h</label>
      </node>
      <node id="7">
        <label>system/platform.h</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="primitive__builder_8cpp_1ad0cbeb2f8f13e9647bdf74910dd64d56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gef::Vector4</type>
        <definition>gef::Vector4 CalculateSphereSurfaceNormal</definition>
        <argsstring>(const float radius, const gef::Vector4 &amp;origin, const gef::Vector4 &amp;point)</argsstring>
        <name>CalculateSphereSurfaceNormal</name>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const gef::Vector4 &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const gef::Vector4 &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Uni/CMP208/Hellwatch/primitive_builder.cpp" line="174" column="14" bodyfile="D:/Uni/CMP208/Hellwatch/primitive_builder.cpp" bodystart="174" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="primitive__builder_8h" kindref="compound">primitive_builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;graphics/mesh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;system/platform.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;graphics/primitive.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;maths/math_utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PrimitiveBuilder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="class_primitive_builder_1a6384d138d3c7193b9791959801d882d1" kindref="member">PrimitiveBuilder::PrimitiveBuilder</ref>(gef::Platform&amp;<sp/>platform)<sp/>:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_(platform),</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>default_cube_mesh_(NULL),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>default_sphere_mesh_(NULL)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~PrimitiveBuilder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="class_primitive_builder_1a70ac6a74c6a3fe209cabf315b0f7bf4d" kindref="member">PrimitiveBuilder::~PrimitiveBuilder</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_primitive_builder_1aed9655474f22afaa00ff015c454bd736" kindref="member">CleanUp</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_primitive_builder_1a1b4b6db65689d27a2bc3cad69803b079" kindref="member">PrimitiveBuilder::Init</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>helper<sp/>geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_primitive_builder_1aa3205470b24e5273efb50e359a547b23" kindref="member">default_cube_mesh_</ref><sp/>=<sp/><ref refid="class_primitive_builder_1af92fb7ac1b3d5c32243e28dbd71691da" kindref="member">CreateBoxMesh</ref>(gef::Vector4(0.5f,<sp/>0.5f,<sp/>0.5f));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_primitive_builder_1aa3179d29464e6f9f0b84d59bcea6f3d1" kindref="member">default_sphere_mesh_</ref><sp/>=<sp/><ref refid="class_primitive_builder_1a5f05e266f6b78f97ac03abfda1a6d44e" kindref="member">CreateSphereMesh</ref>(0.5f,<sp/>20,<sp/>20);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>materials<sp/>for<sp/>basic<sp/>colours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_primitive_builder_1a7757d609903f9cff6a9bd7f1a239fe27" kindref="member">red_material_</ref>.set_colour(0xff0000ff);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_primitive_builder_1a72a6196f7dc9bba9f3887c9a5fe0e485" kindref="member">blue_material_</ref>.set_colour(0xffff0000);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_primitive_builder_1a0c4022f7c66fb130f59d9d2e1c9aee31" kindref="member">green_material_</ref>.set_colour(0xff00ff00);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CleanUp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_primitive_builder_1aed9655474f22afaa00ff015c454bd736" kindref="member">PrimitiveBuilder::CleanUp</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_primitive_builder_1aa3179d29464e6f9f0b84d59bcea6f3d1" kindref="member">default_sphere_mesh_</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_primitive_builder_1aa3179d29464e6f9f0b84d59bcea6f3d1" kindref="member">default_sphere_mesh_</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_primitive_builder_1aa3205470b24e5273efb50e359a547b23" kindref="member">default_cube_mesh_</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_primitive_builder_1aa3205470b24e5273efb50e359a547b23" kindref="member">default_cube_mesh_</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CreateBoxMesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">gef::Mesh*<sp/><ref refid="class_primitive_builder_1af92fb7ac1b3d5c32243e28dbd71691da" kindref="member">PrimitiveBuilder::CreateBoxMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gef::Vector4&amp;<sp/>half_size,<sp/>gef::Vector4<sp/>centre,<sp/>gef::Material**<sp/>materials)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Mesh*<sp/>mesh<sp/>=<sp/>gef::Mesh::Create(<ref refid="class_primitive_builder_1a6bfbd619adebd14a9fe02b68521e279d" kindref="member">platform_</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>vertices,<sp/>4<sp/>for<sp/>each<sp/>face<sp/>so<sp/>we<sp/>have<sp/>all<sp/>vertices<sp/>in<sp/>a<sp/>single<sp/>vertex<sp/>share<sp/>the<sp/>same<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumVertices<sp/>=<sp/>4<sp/>*<sp/>6;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Mesh::Vertex<sp/>vertices[kNumVertices]<sp/>=</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>front</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>1.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>1.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>0.0f,<sp/>0.0f,<sp/>-1.0f,<sp/>0.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>0.0f,<sp/>0.0f,<sp/>-1.0f,<sp/>1.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>0.0f,<sp/>0.0f,<sp/>-1.0f,<sp/>0.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>0.0f,<sp/>0.0f,<sp/>-1.0f,<sp/>1.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>-1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>-1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>-1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>-1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>+<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>1.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>0.0f,<sp/>-1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>+<sp/>half_size.z(),<sp/>0.0f,<sp/>-1.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>-<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>0.0f,<sp/>-1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>centre.x()<sp/>+<sp/>half_size.x(),<sp/><sp/><sp/>centre.y()<sp/>-<sp/>half_size.y(),<sp/>centre.z()<sp/>-<sp/>half_size.z(),<sp/>0.0f,<sp/>-1.0f,<sp/>0.0f,<sp/>1.0f,<sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumIndices<sp/>=<sp/>6<sp/>*<sp/>6;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>Int32<sp/>indices[kNumIndices]<sp/>=</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>front</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>2,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>3,<sp/>2,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/>5,<sp/>6,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/>7,<sp/>6,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/>9,<sp/>10,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9,<sp/>11,<sp/>10,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12,<sp/>13,<sp/>14,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13,<sp/>15,<sp/>14,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16,<sp/>17,<sp/>18,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>17,<sp/>19,<sp/>18,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20,<sp/>21,<sp/>22,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>21,<sp/>23,<sp/>22</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>vertex<sp/>buffer<sp/>for<sp/>the<sp/>box<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh-&gt;InitVertexBuffer(<ref refid="class_primitive_builder_1a6bfbd619adebd14a9fe02b68521e279d" kindref="member">platform_</ref>,<sp/>vertices,<sp/>kNumVertices,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(gef::Mesh::Vertex));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>primitive<sp/>per<sp/>face<sp/>so<sp/>we<sp/>can<sp/>alter<sp/>the<sp/>material<sp/>per<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_faces<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh-&gt;AllocatePrimitives(num_faces);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primitive_num<sp/>=<sp/>0;<sp/>primitive_num<sp/>&lt;<sp/>num_faces;<sp/>++primitive_num)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gef::Primitive*<sp/>primitive<sp/>=<sp/>mesh-&gt;GetPrimitive(primitive_num);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primitive-&gt;InitIndexBuffer(<ref refid="class_primitive_builder_1a6bfbd619adebd14a9fe02b68521e279d" kindref="member">platform_</ref>,<sp/>&amp;indices[primitive_num*6],<sp/>6,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Int32));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primitive-&gt;set_type(gef::TRIANGLE_LIST);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>materials<sp/>pointer<sp/>is<sp/>valid<sp/>then<sp/>assume<sp/>we<sp/>have<sp/>an<sp/>array<sp/>of<sp/>Material<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>size<sp/>greater<sp/>than<sp/>6<sp/>(one<sp/>material<sp/>per<sp/>face)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(materials)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primitive-&gt;set_material(materials[primitive_num]);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>aligned<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Aabb<sp/>aabb(centre<sp/>-<sp/>half_size,<sp/>centre<sp/>+<sp/>half_size);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh-&gt;set_aabb(aabb);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Sphere<sp/>sphere(aabb);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh-&gt;set_bounding_sphere(sphere);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mesh;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CalculateSphereSurfaceNormal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">gef::Vector4<sp/><ref refid="primitive__builder_8cpp_1ad0cbeb2f8f13e9647bdf74910dd64d56" kindref="member">CalculateSphereSurfaceNormal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gef::Vector4&amp;<sp/>origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gef::Vector4&amp;<sp/>point)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gef::Vector4(</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(point.x()<sp/>-<sp/>origin.x())<sp/>/<sp/>radius,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(point.y()<sp/>-<sp/>origin.y())<sp/>/<sp/>radius,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(point.z()<sp/>-<sp/>origin.z())<sp/>/<sp/>radius);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CreateSphereMesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>adapted<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.visualizationlibrary.org/documentation/_geometry_primitives_8cpp_source.html#l00284</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">gef::Mesh*<sp/><ref refid="class_primitive_builder_1a5f05e266f6b78f97ac03abfda1a6d44e" kindref="member">PrimitiveBuilder::CreateSphereMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>theta,<sp/>gef::Vector4<sp/>origin,<sp/>gef::Material*<sp/>material)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Mesh*<sp/>mesh<sp/>=<sp/>gef::Mesh::Create(<ref refid="class_primitive_builder_1a6bfbd619adebd14a9fe02b68521e279d" kindref="member">platform_</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumVertices<sp/>=<sp/>theta*phi<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;gef::Mesh::Vertex&gt;<sp/>vertices;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices.resize(kNumVertices);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Vector4<sp/>position,<sp/>normal(0.0f,<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Vector2<sp/>uv(0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>position<sp/>=<sp/>origin<sp/>+<sp/>gef::Vector4(0.0f,<sp/>radius,<sp/>0.0f);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>normal<sp/>=<sp/><ref refid="primitive__builder_8cpp_1ad0cbeb2f8f13e9647bdf74910dd64d56" kindref="member">CalculateSphereSurfaceNormal</ref>(radius,<sp/>origin,<sp/>position);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].px<sp/>=<sp/>position.x();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].py<sp/>=<sp/>position.y();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].pz<sp/>=<sp/>position.z();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].nx<sp/>=<sp/>normal.x();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].ny<sp/>=<sp/>normal.y();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].nz<sp/>=<sp/>normal.z();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].u<sp/>=<sp/>uv.x;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].v<sp/>=<sp/>uv.y;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>vert_idx++;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>theta;<sp/>++i)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>phi;<sp/>++j)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gef::Vector4<sp/>v(0.0f,<sp/>radius,<sp/>0.0f);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gef::Matrix44<sp/>rotz,<sp/>roty;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotz.RotationZ(gef::DegToRad(180.0f<sp/>/<sp/>(theta<sp/>+<sp/>1)*(i<sp/>+<sp/>1)));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roty.RotationY(gef::DegToRad(360.0f<sp/>/<sp/>phi*j));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v.Transform(rotz);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v.Transform(roty);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/>origin<sp/>+<sp/>v;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal<sp/>=<sp/><ref refid="primitive__builder_8cpp_1ad0cbeb2f8f13e9647bdf74910dd64d56" kindref="member">CalculateSphereSurfaceNormal</ref>(radius,<sp/>origin,<sp/>position);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[vert_idx].px<sp/>=<sp/>position.x();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[vert_idx].py<sp/>=<sp/>position.y();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[vert_idx].pz<sp/>=<sp/>position.z();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[vert_idx].nx<sp/>=<sp/>normal.x();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[vert_idx].ny<sp/>=<sp/>normal.y();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[vert_idx].nz<sp/>=<sp/>normal.z();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[vert_idx].u<sp/>=<sp/>uv.x;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[vert_idx].v<sp/>=<sp/>uv.y;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vert_idx++;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>position<sp/>=<sp/>origin<sp/>+<sp/>gef::Vector4(0.0f,<sp/>-radius,<sp/>0.0f);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>normal<sp/>=<sp/><ref refid="primitive__builder_8cpp_1ad0cbeb2f8f13e9647bdf74910dd64d56" kindref="member">CalculateSphereSurfaceNormal</ref>(radius,<sp/>origin,<sp/>position);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].px<sp/>=<sp/>position.x();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].py<sp/>=<sp/>position.y();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].pz<sp/>=<sp/>position.z();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].nx<sp/>=<sp/>normal.x();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].ny<sp/>=<sp/>normal.y();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].nz<sp/>=<sp/>normal.z();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].u<sp/>=<sp/>uv.x;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[vert_idx].v<sp/>=<sp/>uv.y;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>vert_idx++;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh-&gt;InitVertexBuffer(<ref refid="class_primitive_builder_1a6bfbd619adebd14a9fe02b68521e279d" kindref="member">platform_</ref>,<sp/>&amp;vertices[0],<sp/>kNumVertices,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(gef::Mesh::Vertex));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh-&gt;AllocatePrimitives(2);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>side<sp/>quads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Int32&gt;<sp/>index_buffer;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>index_buffer.resize((theta<sp/>-<sp/>1)*phi<sp/>*<sp/>6);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;theta<sp/>-<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j&lt;phi;<sp/>++j)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>triangles<sp/>per<sp/>quad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>1<sp/>+<sp/>phi*(i<sp/>+<sp/>0)<sp/>+<sp/>(j<sp/>+<sp/>1)<sp/>%<sp/>phi;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>1<sp/>+<sp/>phi*(i<sp/>+<sp/>1)<sp/>+<sp/>(j<sp/>+<sp/>1)<sp/>%<sp/>phi;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>1<sp/>+<sp/>phi*(i<sp/>+<sp/>1)<sp/>+<sp/>(j<sp/>+<sp/>0)<sp/>%<sp/>phi;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>1<sp/>+<sp/>phi*(i<sp/>+<sp/>0)<sp/>+<sp/>(j<sp/>+<sp/>0)<sp/>%<sp/>phi;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>1<sp/>+<sp/>phi*(i<sp/>+<sp/>0)<sp/>+<sp/>(j<sp/>+<sp/>1)<sp/>%<sp/>phi;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>1<sp/>+<sp/>phi*(i<sp/>+<sp/>1)<sp/>+<sp/>(j<sp/>+<sp/>0)<sp/>%<sp/>phi;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Primitive*<sp/>primitive;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>primitive<sp/>for<sp/>side<sp/>quads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>primitive<sp/>=<sp/>mesh-&gt;GetPrimitive(0);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>primitive-&gt;set_type(gef::TRIANGLE_LIST);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>primitive-&gt;set_material(material);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>primitive-&gt;InitIndexBuffer(<ref refid="class_primitive_builder_1a6bfbd619adebd14a9fe02b68521e279d" kindref="member">platform_</ref>,<sp/>&amp;index_buffer[0],<sp/>(UInt32)index_buffer.size(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Int32));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top/bottom<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>index_buffer.resize(phi<sp/>*<sp/>3<sp/>+<sp/>phi<sp/>*<sp/>3);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>fan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j&lt;phi;<sp/>++j)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>1<sp/>+<sp/>(j<sp/>+<sp/>1)<sp/>%<sp/>phi;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>1<sp/>+<sp/>(j<sp/>+<sp/>0)<sp/>%<sp/>phi;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>fan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j&lt;phi;<sp/>++j)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>1<sp/>+<sp/>phi*(theta<sp/>-<sp/>1)<sp/>+<sp/>(j<sp/>+<sp/>0)<sp/>%<sp/>phi;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>1<sp/>+<sp/>phi*(theta<sp/>-<sp/>1)<sp/>+<sp/>(j<sp/>+<sp/>1)<sp/>%<sp/>phi;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_buffer.at(idx++)<sp/>=<sp/>(int)kNumVertices<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>primitive<sp/>for<sp/>top<sp/>and<sp/>bottom<sp/>fans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>primitive<sp/>=<sp/>mesh-&gt;GetPrimitive(1);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>primitive-&gt;set_type(gef::TRIANGLE_LIST);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>primitive-&gt;set_material(material);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>primitive-&gt;InitIndexBuffer(<ref refid="class_primitive_builder_1a6bfbd619adebd14a9fe02b68521e279d" kindref="member">platform_</ref>,<sp/>&amp;index_buffer[0],<sp/>(UInt32)index_buffer.size(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Int32));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Aabb<sp/>aabb(gef::Vector4(-radius,<sp/>-radius,<sp/>-radius)<sp/>-<sp/>origin,<sp/>gef::Vector4(radius,<sp/>radius,<sp/>radius)+<sp/>origin);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh-&gt;set_aabb(aabb);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>gef::Sphere<sp/>sphere(origin,<sp/>radius);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh-&gt;set_bounding_sphere(sphere);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mesh;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Uni/CMP208/Hellwatch/primitive_builder.cpp"/>
  </compounddef>
</doxygen>
